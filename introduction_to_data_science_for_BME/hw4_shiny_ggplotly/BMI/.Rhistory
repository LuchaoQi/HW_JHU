dat = dat %>% rownames() =dat[1]
#merge the data
dat = mutate(dat,avgSpending = apply(dat[c(-1,-26)], 1, mean))
rownames(dat) = dat[1]
dat = dat[-1]
rownames(dat) = dat[1]
#merge the data
dat = mutate(dat,avgSpending = apply(dat[c(-1,-26)], 1, mean))
rownames(dat) = dat[1]
#merge the data
dat = mutate(dat,avgSpending = apply(dat[c(-1,-26)], 1, mean))
dat  = left_join(dat1,dat2,by = 'Location')
#merge the data
dat = mutate(dat,avgSpending = apply(dat[c(-1,-26)], 1, mean))
rownames(dat) = dat[,1]
dat = dat[-1]
dat  = left_join(dat1,dat2,by = 'Location')
#merge the data
dat = dat%>%mutate(,avgSpending = apply(dat[c(-1,-26)], 1, mean))
dat  = left_join(dat1,dat2,by = 'Location')
#merge the data
dat = dat%>%mutate(avgSpending = apply(dat[c(-1,-26)], 1, mean))
#merge the data
dat = dat%>%mutate(avgSpending = apply(dat[c(-1,-26)], 1, mean))%>%rownames=dat[,1]
dat  = left_join(dat1,dat2,by = 'Location')
dat = mutate(dat,avgSpending = apply(dat[c(-1,-26)], 1, mean))
#merge the data
dat1 = read.csv('https://raw.githubusercontent.com/jhu-advdatasci/2018/master/data/KFF/healthcare-spending.csv',skip=2)[1:52,]
dat2 = read.csv('https://raw.githubusercontent.com/bcaffo/ds4bme/master/data/federalRegions.txt',skip =1, sep ='\t')
colnames(dat2) = c('Region','Location')
#merge the data
dat1 = read.csv('https://raw.githubusercontent.com/jhu-advdatasci/2018/master/data/KFF/healthcare-spending.csv',skip=2)[1:52,]
dat2 = read.csv('https://raw.githubusercontent.com/bcaffo/ds4bme/master/data/federalRegions.txt',skip =1, sep ='\t')
colnames(dat2) = c('Region','Location')
dat  = left_join(dat1,dat2,by = 'Location')
dat = mutate(dat,avgSpending = apply(dat[c(-1,-26)], 1, mean))
dat  = left_join(dat1,dat2,by = 'Location')
colnames(dat[-1]) =c(1991:2014)
colnames(dat)[-1] =c(1991:2014)
dat  = left_join(dat1,dat2,by = 'Location')
colnames(dat)[c(-1,-26)] =c(1991:2014)
dat  = left_join(dat1,dat2,by = 'Location')
colnames(dat)[c(-1,-26)] =c(1991:2014)
dat = mutate(dat,avgSpending = apply(dat[c(-1,-26)], 1, mean))
dat[-'United States',]
dat['-United States',]
dat['United States',]
c
dat  = left_join(dat1,dat2,by = 'Location')
colnames(dat)[c(-1,-26)] =c(1991:2014)
dat = mutate(dat,avgSpending = apply(dat[c(-1,-26)], 1, mean))
rownames(dat) = dat[1]
dat = dat[-1]
dat  = left_join(dat1,dat2,by = 'Location')
colnames(dat)[c(-1,-26)] =c(1991:2014)
dat = mutate(dat,avgSpending = apply(dat[c(-1,-26)], 1, mean))
rownames(dat) = dat[1]
rownames(dat) = dat[1,]
rownames(dat) = dat[,1]
dat = dat[-1]
dat = dat[!rownames(g) %in% c('Connecticut','United States','District of Columbia'),]
dat = dat[!rownames(dat) %in% c('Connecticut','United States','District of Columbia'),]
install.packages("plotly")
dat  = left_join(dat1,dat2,by = 'Location')
#Exclude some regions
colnames(dat)[c(-1,-26)] =c(1991:2014)
dat = mutate(dat,avgSpending = apply(dat[c(-1,-26)], 1, mean))
rownames(dat) = dat[,1]
dat = dat[-1]
#Exclude some regions
colnames(dat)[c(-1,-26)] =c(1991:2014)
dat = mutate(dat,avgSpending = apply(dat[c(-1,-26)], 1, mean))
rownames(dat) = dat[,1]
dat  = left_join(dat1,dat2,by = 'Location')
#Exclude some regions
colnames(dat)[c(-1,-26)] =c(1991:2014)
dat = mutate(dat,avgSpending = apply(dat[c(-1,-26)], 1, mean))
rownames(dat) = dat[,1]
#Exclude some regions
colnames(dat)[-26] =c('Location',1991:2014)
dat  = left_join(dat1,dat2,by = 'Location')
#Exclude some regions
colnames(dat)[-26] =c('Location',1991:2014)
dat = mutate(dat,avgSpending = apply(dat[c(-1,-26)], 1, mean))
rownames(dat) = dat[,1]
dat = dat[-1]
#Exclude some regions
colnames(dat)[c(-1,-26)] =c(1991:2014)
dat  = left_join(dat1,dat2,by = 'Location')
#Exclude some regions
colnames(dat)[c(-1,-26)] =c(1991:2014)
dat = mutate(dat,avgSpending = apply(dat[c(-1,-26)], 1, mean))
rownames(dat) = dat[,1]
dat = dat[-1]
dat = dat[!rownames(dat) %in% c('Connecticut','United States','District of Columbia'),]
colnames(dat)[1] = 'Region'
colnames(dat2) = c('Region','Location')
dat  = left_join(dat1,dat2,by = 'Location')
dat = mutate(dat,avgSpending = apply(dat[c(-1,-26)], 1, mean))
rownames(dat) = dat[,1]
dat = dat[!rownames(dat) %in% c('Connecticut','United States','District of Columbia'),]
#plot
ggplot(dat,aes=(x=dat$Location, y = avgSpending, fill = Location))
#plot
ggplot(dat,aes=(x=dat$Location,
#plot
ggplot(dat,aes=(x=dat$Location,
#plot
ggplot(dat, aes=(x=Location,
#plot
ggplot(dat, aes=(x=Location,
#plot
ggplot(dat, aes=(x=Location,y = avgSpending,fill = Location))
#plot
ggplot(dat, aes=(x= as.factor(Location),y = avgSpending,fill = Location)) + geom_col()
#plot
ggplot(dat, aes(x=Location,y = avgSpending,fill = Location)) + geom_col()
library(ggplot2)
library(ploty)
library(plotly)
```{r warning=FALSE}
library(MRIcloudT1volumetrics)
library(dplyr)
library(magrittr)
library(ggplot2)
library(plotly)
#plot
ggplot(dat, aes(x=Location,y = avgSpending,fill = Location)) + geom_col()
#plot
ggplot(dat, aes(x=Location,y = avgSpending,fill = Location)) + geom_col()+
theme(axis.text.x = element_text(size = 10, angle = 90,vjust=0))
#merge the data
dat1 = read.csv('https://raw.githubusercontent.com/jhu-advdatasci/2018/master/data/KFF/healthcare-spending.csv',skip=2)[1:52,]
dat2 = read.csv('https://raw.githubusercontent.com/bcaffo/ds4bme/master/data/federalRegions.txt',skip =1, sep ='\t')
colnames(dat2) = c('Region','Location')
dat  = left_join(dat1,dat2,by = 'Location')
#Exclude some regions
colnames(dat)[c(-1,-26)] =c(1991:2014)
dat = mutate(dat,avgSpending = apply(dat[c(-1,-26)], 1, mean))
rownames(dat) = dat[,1]
dat = dat[!rownames(dat) %in% c('Connecticut','United States','District of Columbia'),]
#plot
ggplot(dat, aes(x=Location,y = avgSpending,fill = Location)) + geom_col()+
theme(axis.text.x = element_text(size = 10, angle = 90,vjust=0))
#plot
ggplot(dat, aes(x=Location,y = avgSpending,fill = Location)) + geom_col()+
theme(axis.text.x = element_text(size = 10, angle = 60))
#plot
ggplot(dat, aes(x=Location,y = avgSpending,fill = Location)) + geom_col()+
theme(axis.text.x = element_text(size = 10, angle = 60,vjust=0))
#plot
ggplot(dat, aes(x=Location,y = avgSpending,fill = Location)) + geom_col()+
theme(axis.text.x = element_text(size = 10, angle = 60,vjust=1))
#plot
ggplot(dat, aes(x=Location,y = avgSpending,fill = Location)) + geom_col()+
theme(axis.text.x = element_text(size = 10, angle = 60))
#merge the data
dat1 = read.csv('https://raw.githubusercontent.com/jhu-advdatasci/2018/master/data/KFF/healthcare-spending.csv',skip=2)[1:52,]
dat2 = read.csv('https://raw.githubusercontent.com/bcaffo/ds4bme/master/data/federalRegions.txt',skip =1, sep ='\t')
colnames(dat2) = c('Region','Location')
dat  = left_join(dat1,dat2,by = 'Location')
#Exclude some regions
colnames(dat)[c(-1,-26)] =c(1991:2014)
dat = mutate(dat,avgSpending = apply(dat[c(-1,-26)], 1, mean))
rownames(dat) = dat[,1]
dat = dat[!rownames(dat) %in% c('Connecticut','United States','District of Columbia'),]
#plot
ggplot(dat, aes(x=Location,y = avgSpending,fill = Location)) + geom_col()+
theme(axis.text.x = element_text(size = 10, angle = 90,vjust=0))
#plot
ggplot(dat, aes(x=as.factor(Location),y = avgSpending,fill = as.factor(Location))) + geom_col()+
theme(axis.text.x = element_text(size = 10, angle = 90,vjust=0))
#plot
ggplot(dat, aes(Location,y = avgSpending,fill = Location)) + geom_col()+
theme(axis.text.x = element_text(size = 10, angle = 90,vjust=0))
#plot
ggplot(dat, aes(Location,y = avgSpending,fill = Region)) + geom_col()+
theme(axis.text.x = element_text(size = 10, angle = 90,vjust=0))
#plot
ggplot(dat, aes(Location,y = avgSpending,fill = as.factor(Region))) + geom_col()+
theme(axis.text.x = element_text(size = 10, angle = 90,vjust=0))
#plot
ggplot(dat, aes(Region,y = avgSpending,fill = Location)) + geom_col()+
theme(axis.text.x = element_text(size = 10, angle = 90,vjust=0))
#merge the data
dat1 = read.csv('https://raw.githubusercontent.com/jhu-advdatasci/2018/master/data/KFF/healthcare-spending.csv',skip=2)[1:52,]
dat2 = read.csv('https://raw.githubusercontent.com/bcaffo/ds4bme/master/data/federalRegions.txt',skip =1, sep ='\t')
colnames(dat2) = c('Region','Location')
dat  = left_join(dat1,dat2,by = 'Location')
#Exclude some regions
colnames(dat)[c(-1,-26)] =c(1991:2014)
dat = mutate(dat,avgSpending = apply(dat[c(-1,-26)], 1, mean))
rownames(dat) = dat[,1]
dat = dat[!rownames(dat) %in% c('Connecticut','United States','District of Columbia'),]
#plot
ggplot(dat, aes(Region,y = avgSpending,fill = Location)) + geom_col()+
theme(axis.text.x = element_text(size = 10, angle = 90,vjust=0))
#merge the data
dat1 = read.csv('https://raw.githubusercontent.com/jhu-advdatasci/2018/master/data/KFF/healthcare-spending.csv',skip=2)[1:52,]
dat2 = read.csv('https://raw.githubusercontent.com/bcaffo/ds4bme/master/data/federalRegions.txt',skip =1, sep ='\t')
colnames(dat2) = c('Region','Location')
dat  = left_join(dat1,dat2,by = 'Location')
#Exclude some regions
colnames(dat)[c(-1,-26)] =c(1991:2014)
dat = mutate(dat,avgSpending = apply(dat[c(-1,-26)], 1, mean))
rownames(dat) = dat[,1]
dat = dat[!rownames(dat) %in% c('Connecticut','United States','District of Columbia'),]
#plot
ggplot(dat, aes(Region,y = avgSpending,fill = Location)) + geom_col()
#plot
plotly(dat, aes(Region,y = avgSpending,fill = Location)) + geom_col()
#plot
ggplot(dat, aes(Region,y = avgSpending,fill = Location)) + geom_col()
plotly(dat,x = ~Region,y = ~avgSpending, fill =~Location, type = 'bar')
plot_ly(dat,x = ~Region,y = ~avgSpending, fill =~Location, type = 'bar')
plot_ly(dat,x = ~Region,y = ~avgSpending, type = 'bar') %>% add_trace(y = ~Location)
plot_ly(dat,x = ~Region,y = ~avgSpending, type = 'bar')
#plot
ggplot(dat, aes(Region,y = avgSpending,fill = Location)) + geom_col()
plot_ly(dat,x = ~Region,y = ~avgSpending, type = 'bar') %>% add_trace(y = ~Location)
plot_ly(dat,x = ~Region,y = ~avgSpending, type = 'bar') %>%
add_trace(y = ~Location)%>%
layout(barmode = 'stack')
#plot
ggplot(dat, aes(Region,y = avgSpending,fill = Location)) + geom_col()
plot_ly(dat,x = ~Region,y = ~avgSpending, type = 'bar', color = ~Location)
plot_ly(dat,x = ~Region,y = ~avgSpending, type = 'bar', color = ~Location)
plot_ly(dat,x = ~Region,y = ~avgSpending, color = ~Location)
plot_ly(dat,x = ~Region,y = ~avgSpending, barmode = 'stackbar', color = ~Location)
plot_ly(dat,x = ~Region,y = ~avgSpending, barmode = 'stack', color = ~Location)
plot_ly(dat,x = ~Region,y = ~avgSpending,  color = ~Location) %>%
layout(barmode = 'stack')
dat2 = read.csv('https://raw.githubusercontent.com/bcaffo/ds4bme/master/data/federalRegions.txt',header=1, sep ='\t')
dat2 = read.csv('https://raw.githubusercontent.com/bcaffo/ds4bme/master/data/federalRegions.txt',skip = 1, sep ='\t')
dat2 = read.csv('https://raw.githubusercontent.com/bcaffo/ds4bme/master/data/federalRegions.txt',skip = 0, sep ='\t')
dat2 = read.table('https://raw.githubusercontent.com/bcaffo/ds4bme/master/data/federalRegions.txt',skip = 0, sep ='\t')
dat2 = read.table('https://raw.githubusercontent.com/bcaffo/ds4bme/master/data/federalRegions.txt',skip = 1, sep ='\t')
colnames(dat2) = c('Region','Location')
dat  = left_join(dat1,dat2,by = 'Location')
#Exclude some regions
colnames(dat)[c(-1,-26)] =c(1991:2014)
dat = mutate(dat,avgSpending = apply(dat[c(-1,-26)], 1, mean))
#merge the data
dat1 = read.csv('https://raw.githubusercontent.com/jhu-advdatasci/2018/master/data/KFF/healthcare-spending.csv',skip=2)[1:52,]
dat2 = read.table('https://raw.githubusercontent.com/bcaffo/ds4bme/master/data/federalRegions.txt',skip = 1, sep ='\t')
colnames(dat2) = c('Region','Location')
dat  = left_join(dat1,dat2,by = 'Location')
#Exclude some regions
colnames(dat)[c(-1,-26)] =c(1991:2014)
dat = mutate(dat,avgSpending = apply(dat[c(-1,-26)], 1, mean))
rownames(dat) = dat[,1]
dat = dat[!rownames(dat) %in% c('United States','District of Columbia'),]
#plot
ggplot(dat, aes(Region,y = avgSpending,fill = Location)) + geom_col()
plot_ly( x = ~Region, y = ~avgSpending, color= ~Location, type = ‘bar’)%>%
plot_ly( x = ~Region, y = ~avgSpending, color= ~Location, type = 'bar')%>%
layout(yaxis = list(title = ‘Average Spending’), barmode = ‘stack’)
plot_ly(dat,x =~Region, y = ~avgSpending, color= ~Location, type = 'bar')%>%
layout(yaxis = list(title = ‘Average Spending’), barmode = ‘stack’)
plot_ly(dat,x =~Region, y = ~avgSpending, color= ~Location, type = 'bar')%>%
layout(yaxis = list(title = 'Average Spending'), barmode = 'stack')
plot_ly(dat,x =~Region, y = ~avgSpending, color= ~Location)%>%
layout(yaxis = list(title = 'Average Spending'), barmode = 'stack')
plot_ly(dat,x =~Region, y = ~avgSpending, color= ~Location, type = 'bar')%>%
layout(yaxis = list(title = 'Average Spending'), barmode = 'stack')
library(MRIcloudT1volumetrics)
library(dplyr)
library(magrittr)
library(ggplot2)
library(plotly)
#merge the data
dat1 = read.csv('https://raw.githubusercontent.com/jhu-advdatasci/2018/master/data/KFF/healthcare-spending.csv',skip=2)[1:52,]
dat2 = read.table('https://raw.githubusercontent.com/bcaffo/ds4bme/master/data/federalRegions.txt',skip = 1, sep ='\t')
colnames(dat2) = c('Region','Location')
dat  = left_join(dat1,dat2,by = 'Location')
#Exclude some regions
colnames(dat)[c(-1,-26)] =c(1991:2014)
dat = mutate(dat,avgSpending = apply(dat[c(-1,-26)], 1, mean))
rownames(dat) = dat[,1]
dat = dat[!rownames(dat) %in% c('United States','District of Columbia'),]
#plot
# ggplot(dat, aes(Region,y = avgSpending,fill = Location)) + geom_col()
plot_ly(dat,x =~Region, y = ~avgSpending, color= ~Location, type = 'bar')%>%
layout(yaxis = list(title = 'Average Spending'), barmode = 'stack')
#merge the data
dat1 = read.csv('https://raw.githubusercontent.com/jhu-advdatasci/2018/master/data/KFF/healthcare-spending.csv',skip=2)[1:52,]
dat2 = read.table('https://raw.githubusercontent.com/bcaffo/ds4bme/master/data/federalRegions.txt',skip = 1, sep ='\t')
colnames(dat2) = c('Region','Location')
dat  = left_join(dat1,dat2,by = 'Location')
#Exclude some regions
colnames(dat)[c(-1,-26)] =c(1991:2014)
dat = mutate(dat,avgSpending = apply(dat[c(-1,-26)], 1, mean))
rownames(dat) = dat[,1]
dat = dat[!rownames(dat) %in% c('United States','District of Columbia'),]
#plot
# ggplot(dat, aes(Region,y = avgSpending,fill = Location)) + geom_col()
plot_ly(dat,x =~Region, y = ~avgSpending, color= ~Location, type = 'bar')%>%
layout(yaxis = list(title = 'Average Spending'), barmode = 'stack')
c(1:10) in c(5:15)
1:10
1:10 in 5:15
c(1:10)
c(1:10) in c(5:15)
table(rbinom(30,5,0.5))
rbinom(30,5,0.5)
?rbinom
rbinom(30,5,0.1)
a = rbinom(30,10,0.5)
barplot(table(a)
a = rbinom(30,10,0.5)
barplot(table(a))
table(rbinom(30,10,5))
table(rbinom(30,10,0.5))
qbinom(0,10,0.5)
qbinom(1,10,0.5)
qbinom(0.95,10,0.5)
qbinom(0.95,100,0.5)
qbinom(0.95,1000,0.5)
qbinom(1,1000,0.5)
qbinom(0.95,1000,0.5)
pbinom(526,1000,0.5)
?range
range(1,10)
range(1:10)
1:10
x = 1:200
y = list()
y
y[0]
y[1]
x
is.array(x)
attributes(x)
attr(x)
?seq
y = []
y = matrix()
y
y = array()
y
y[0]
y[1]
y[2]
y[1]
x = 1:200
y = array()
barplot(x,y)
x = 1:200
y = array()
for (size in x)
{
y[i] = qbinom(0.95,size,0.5)/size
}
x = 1:200
y = array()
for (size in x)
{
y[size] = qbinom(0.95,size,0.5)/size
}
barplot(x,y)
x
y
as.data.frame(y)
x = 1:200
y = array()
for (size in x)
{
y[size] = qbinom(0.95,size,0.5)/size
}
y = as.data.frame(y)
library(ggplot2)
library(ggplot2)
x = 1:200
y = array()
for (size in x)
{
y[size] = qbinom(0.95,size,0.5)/size
}
ggplot(dat = y)
library(ggplot2)
x = 1:200
y = array()
for (size in x)
{
y[size] = qbinom(0.95,size,0.5)/size
}
y = as.data.frame(y)
ggplot(dat = y)+geom_bar()
attributes(y)
y
ggplot(dat = y, aes(y = y))+geom_bar()
library(ggplot2)
x = 1:200
y = array()
for (size in x)
{
y[size] = qbinom(0.95,size,0.5)/size
}
y = as.data.frame(y)
ggplot(y)+geom_bar(aes(x=1:200))
library(ggplot2)
x = 1:200
y = array()
for (size in x)
{
y[size] = qbinom(0.95,size,0.5)/size
}
barplot(x,y)
y = as.data.frame(y)
ggplot(y)+geom_bar(aes(x=1:200))
ggplot(data = as.data.frame(y))+geom_bar()
ggplot(data = as.data.frame(y),aes(x=1:200,y = y))+geom_bar()
y
y$y
library(ggplot2)
X = 1:200
Y = array()
for (size in X)
{
Y[size] = qbinom(0.95,size,0.5)/size
}
barplot(X,Y)
ggplot(data = as.data.frame(Y),aes(x=1:200,y = Y))+geom_bar()
dat = as.data.frame(Y)
colnames(dat) = col
View(dat)
colnames(dat) = 'col'
ggplot(data = dat,aes(x=1:200,y = col))+geom_bar()
Y.rownames
rownames(Y)
ggplot(data = as.data.frame(Y),aes(y = col))+geom_bar()
barplot(X,Y)
barplot(X,Y,xlab = Coverage, ylab=(number of reads)/(coverage))
barplot(X,Y,xlab = 'Coverage', ylab='(number of reads)/(coverage)')
library(ggplot2)
X = 1:200
Y = array()
for (size in X)
{
Y[size] = qbinom(0.95,size,0.5)/size
}
barplot(X,Y,xlab = 'Coverage', ylab='(number of reads)/(coverage)')
X = 1:200
Y = array()
for (size in X)
{
Y[size] = qbinom(0.95,size,0.5)/size
}
barplot(X,Y,xlab = 'Coverage', ylab='(number of reads)/(coverage)')
ggplot(data = Y) + geom_col()
library(ggplot2)
Y = as.data.frame(Y)
ggplot(data = Y) + geom_col()
ggplot(data = Y) + geom_col(aes(x = y))
X = 1:200
for (size in X)
{
Y[size] = qbinom(0.95,size,0.5)/size
}
plot(X,Y,xlab = 'Coverage', ylab='(number of reads)/(coverage)')
barplot(X,Y,xlab = 'Coverage', ylab='(number of reads)/(coverage)')
X = 1:200
for (size in X)
{
Y[size] = qbinom(0.95,size,0.5)/size
}
barplot(X,Y,xlab = 'Coverage', ylab='(number of reads)/(coverage)')
View(Y)
Y = vector()
for (size in X)
{
Y[size] = qbinom(0.95,size,0.5)/size
}
barplot(X,Y,xlab = 'Coverage', ylab='(number of reads)/(coverage)')
Y = as.data.frame(Y)
View(Y)
ggplot(data=Y,aes(Y))+geom_bar()
barplot(X,Y,xlab = 'Coverage', ylab='(number of reads)/(coverage)')
X = 1:200
for (size in X)
{
Y[size] = qbinom(0.95,size,0.5)/size
}
barplot(X,Y,xlab = 'Coverage', ylab='(number of reads)/(coverage)')
X = 1:200
Y = vector()
for (size in X)
{
Y[size] = qbinom(0.95,size,0.5)/size
}
barplot(X,Y,xlab = 'Coverage', ylab='(number of reads)/(coverage)')
1:10
c(1:10)
ggplot(data = as.data.frame(Y),aes(x=1:200,y=Y))+geom_point()
Y
X = 1:200
Y = vector()
for (size in X)
{
Y[size] = qbinom(0.95,size,0.5)/size
}
library(ggplot2)
ggplot(data = as.data.frame(Y),aes(x=1:200,y=Y))+geom_point()
qbinorm
qbinom(0.95,10,0.5)
pbinom(8,10,0.5)
pbinom(7,10,0.5)
qbinom(0.95,100,0.5)
install
install.packages('rsconnect')
setwd("C:/Users/lcqi/OneDrive/Desktop/Courses/introduction_to_data_science_for_BME/hw4_shiny/BMI")
shiny::runApp()
